<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>tn.esprit.spring</groupId>
	<artifactId>DependencyInjection_TODO</artifactId>
	<version>0.0.2</version>
	<packaging>jar</packaging>
	
	<name>Injection de dépendance</name>
	
	<description>
		Juste après avoir compris le concept de l'injection de dépendance sans utiliser Spring, 
		ceci est un premier exemple qui illustre l'injection de dépendance en utilisant Spring.
	</description>
  
	<licenses>
	  <license>
	    <name>GNU General Public License (GPL)</name>
	    <url>http://www.gnu.org/licenses/gpl.txt</url>
	  </license>
	</licenses>
  
	<developers>
		<developer>
			<name>Walid YAICH</name>
			<email>walid.yaich@esprit.tn</email>
			<organization>Esprit</organization>
			<organizationUrl>http://www.esprit.tn</organizationUrl>
		</developer>
	</developers>
  
  
	<properties>
		<maven.compiler.source>1.8</maven.compiler.source> 
		<!-- https://maven.apache.org/plugins/maven-compiler-plugin/index.html -->
    	<maven.compiler.target>1.8</maven.compiler.target>
    	
		<spring.version>4.2.0.RELEASE</spring.version>
		<mainClass>tn.esprit.di.presentation.ClientView</mainClass>
		<logback.version>1.1.1</logback.version>
		<jcloverslf4j.version>1.7.6</jcloverslf4j.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	
	<dependencies>
		<!-- spring-core: fundamental parts of the Spring Framework -->
        <!-- TODO Ajouter la dépendance Spring Core -->
        
        
		<!-- spring-context: ApplicationContext interface is part of this module, being the interface that every -->
		<!-- application context class implements. -->
		<dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
            <exclusions>
	    	    <exclusion>
		    		<groupId>commons-logging</groupId>
		    		<artifactId>commons-logging</artifactId>
	    	    </exclusion>
    		</exclusions>		
        </dependency>	
		<!-- LogBack dependencies -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>                                    
			<groupId>org.slf4j</groupId>                
			<artifactId>jcl-over-slf4j</artifactId>     
			<version>${jcloverslf4j.version}</version>  
		</dependency>

      <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>1.8.9</version>
	    </dependency>   
    </dependencies>


  <build>
    <plugins>
	  <!--   http://www.mojohaus.org/exec-maven-plugin/index.html -->
	  <!-- Java Goal : This goal helps you run a Java program within the same VM as Maven. -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.6.0</version>
        <configuration>
        	<mainClass>${mainClass}</mainClass>
        </configuration>
      </plugin>
      
     
	<!--  Generate executable Jar  -->
     <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.0.0</version>
        <configuration>
          <archive>
            <manifest>
              <mainClass>${mainClass}</mainClass>
            </manifest>
          </archive>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id> <!-- this is used for inheritance merges -->
            <phase>package</phase> <!-- bind to the packaging phase -->
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
    </plugins>
  </build>
  
</project>